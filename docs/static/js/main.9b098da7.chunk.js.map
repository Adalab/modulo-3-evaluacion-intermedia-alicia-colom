{"version":3,"sources":["images/logo-pokemon.png","components/Pokemon.js","components/PokeList.js","components/App.js","reportWebVitals.js","index.js"],"names":["Pokemon","props","typeList","pokemon","types","map","eachType","id","className","console","log","mother","name","src","url","alt","title","evolution","PokeList","pokemons","list","eachItem","evolutedOf","find","each","App","useState","pokedex","data","logo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"o2DAAe,MAA0B,yCCiE1BA,G,YA9DC,SAACC,GAChB,IAAMC,EAAWD,EAAME,QAAQC,MAAMC,KAAI,SAACC,GACzC,OACC,oBAECC,GAAIN,EAAME,QAAQI,GAAKD,EACvBE,UAAU,0BAHX,SAKEF,GAJIL,EAAME,QAAQI,GAAKD,MAW3B,OAFAG,QAAQC,IAAIT,EAAMU,QAGjB,qCACC,oBAAIH,UAAU,OAAd,SAAsBP,EAAME,QAAQS,OACpC,qBACCJ,UAAU,QACVK,IAAKZ,EAAME,QAAQW,IACnBC,IAAK,aAAed,EAAME,QAAQS,KAClCI,MAAO,aAAef,EAAME,QAAQS,OAErC,sBAAKJ,UAAU,cAAf,UACC,oBAAIA,UAAU,oBAAd,SAAmCN,IAClCD,EAAME,QAAQc,UACd,gCACC,gDACA,sBAAMT,UAAU,yBAAhB,SACEP,EAAME,QAAQc,YAEhB,qBACCJ,IAAKZ,EAAMU,OAAOG,IAClBC,IACCd,EAAME,QAAQc,UACX,gBAAkBhB,EAAME,QAAQc,UAChC,OAEJD,MACCf,EAAME,QAAQc,UACX,gBAAkBhB,EAAME,QAAQc,UAChC,OAEJT,UAAU,mCAIZ,WChCUU,EAhBE,SAACjB,GACjB,IAAMkB,EAAWlB,EAAMmB,KAAKf,KAAI,SAACgB,GAChC,IAAMC,EAAarB,EAAMmB,KAAKG,MAC7B,SAACC,GAAD,OAAUH,EAASJ,YAAcO,EAAKZ,QAGvC,OACC,oBAAIJ,UAAU,WAAd,SACC,cAAC,EAAD,CAASL,QAASkB,EAAUV,OAAQW,KADPD,EAASd,OAMzC,OAAO,oBAAIC,UAAU,WAAd,SAA0BW,KCInBM,EAdH,WAAO,IAAD,EACOC,mBAASC,GADhB,mBACVC,EADU,UAGjB,OACC,sBAAKpB,UAAU,MAAf,UACC,qBAAKA,UAAU,OAAOK,IAAKgB,EAAMd,IAAI,iBACrC,cAAC,EAAD,CAAUK,KAAMQ,IAChB,uBAAOpB,UAAU,QAAjB,iDCDYsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAGzBb,M","file":"static/js/main.9b098da7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-pokemon.a38b4bf8.png\";","import propTypes from 'prop-types';\nimport '../stylesheets/Pokemon.scss';\n\nconst Pokemon = (props) => {\n\tconst typeList = props.pokemon.types.map((eachType) => {\n\t\treturn (\n\t\t\t<li\n\t\t\t\tkey={props.pokemon.id + eachType}\n\t\t\t\tid={props.pokemon.id + eachType}\n\t\t\t\tclassName=\"description__type--item\"\n\t\t\t>\n\t\t\t\t{eachType}\n\t\t\t</li>\n\t\t);\n\t});\n\n\tconsole.log(props.mother);\n\n\treturn (\n\t\t<>\n\t\t\t<h2 className=\"name\">{props.pokemon.name}</h2>\n\t\t\t<img\n\t\t\t\tclassName=\"image\"\n\t\t\t\tsrc={props.pokemon.url}\n\t\t\t\talt={'Imagen de ' + props.pokemon.name}\n\t\t\t\ttitle={'Imagen de ' + props.pokemon.name}\n\t\t\t/>\n\t\t\t<div className=\"description\">\n\t\t\t\t<ul className=\"description__type\">{typeList}</ul>\n\t\t\t\t{props.pokemon.evolution ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<small>Evolution: </small>\n\t\t\t\t\t\t<span className=\"description__evolution\">\n\t\t\t\t\t\t\t{props.pokemon.evolution}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={props.mother.url}\n\t\t\t\t\t\t\talt={\n\t\t\t\t\t\t\t\tprops.pokemon.evolution\n\t\t\t\t\t\t\t\t\t? 'Evolution of ' + props.pokemon.evolution\n\t\t\t\t\t\t\t\t\t: 'none'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\tprops.pokemon.evolution\n\t\t\t\t\t\t\t\t\t? 'Evolution of ' + props.pokemon.evolution\n\t\t\t\t\t\t\t\t\t: 'none'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tclassName=\"description__evolution--img\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t''\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nPokemon.propTypes = {\n\tid: propTypes.number,\n\tname: propTypes.string,\n\ttypes: propTypes.string,\n\tevolution: propTypes.string,\n};\n\nexport default Pokemon;\n","import '../stylesheets/PokeList.scss';\nimport Pokemon from './Pokemon';\n\nconst PokeList = (props) => {\n\tconst pokemons = props.list.map((eachItem) => {\n\t\tconst evolutedOf = props.list.find(\n\t\t\t(each) => eachItem.evolution === each.name\n\t\t);\n\n\t\treturn (\n\t\t\t<li className=\"pokeItem\" key={eachItem.id}>\n\t\t\t\t<Pokemon pokemon={eachItem} mother={evolutedOf} />\n\t\t\t</li>\n\t\t);\n\t});\n\n\treturn <ul className=\"pokeList\">{pokemons}</ul>;\n};\n\nexport default PokeList;\n","import { useState } from 'react';\nimport '../stylesheets/App.scss';\nimport pokedex from '../data/pokedex.json';\nimport logo from '../images/logo-pokemon.png';\nimport PokeList from './PokeList';\n\nconst App = () => {\n\tconst [data, setData] = useState(pokedex);\n\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<img className=\"logo\" src={logo} alt=\"Logo Pokemon\" />\n\t\t\t<PokeList list={data} />\n\t\t\t<small className=\"small\">Made with React by Alicia Colom</small>\n\t\t</div>\n\t);\n};\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.scss';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}